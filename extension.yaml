name: firestore-typesense-multi-sync
version: 1.2.1
specVersion: v1beta # Firebase Extensions specification version (do not edit)

displayName: Multi-Collection Firestore to Typesense Sync
description: Sync multiple Firestore collections to Typesense with enhanced configuration options

license: Apache-2.0 # The license you want for the extension

author:
  authorName: Brad Mallow (Scope Inspections)
  url: https://getscope.ai

sourceUrl: https://github.com/brad-scope/firestore-typesense-multi-sync
releaseNotesUrl: https://github.com/brad-scope/firestore-typesense-multi-sync/releases

billingRequired: true

resources:
  - name: automatic_sync
    description: A function that indexes data into Typesense when it's triggered by Firestore changes
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      sourceDirectory: functions
      buildConfig:
        runtime: nodejs22
      serviceConfig:
        timeoutSeconds: 540
        invoker:
          - eventarc-trigger@${PROJECT_ID}.iam.gserviceaccount.com
      eventTrigger:
        eventType: google.cloud.firestore.document.v1.written
        triggerRegion: ${FIRESTORE_DATABASE_REGION}
        eventFilters:
          - attribute: database
            value: ${DATABASE}
          - attribute: document
            value: "{path=**}"
            operator: match-path-pattern

  - name: manual_sync
    description: >-
      A function that syncs data from Firestore to Typesense,
      triggered when any document is created in the `typesense_manual_sync` collection.
      Supports custom paths via the `paths` field or syncs all configured collections by default.
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs22
      sourceDirectory: functions
      serviceConfig:
        timeoutSeconds: 540
        availableMemory: 2048M
        invoker:
          - eventarc-trigger@${PROJECT_ID}.iam.gserviceaccount.com
      eventTrigger:
        eventType: google.cloud.firestore.document.v1.created
        triggerRegion: ${FIRESTORE_DATABASE_REGION}
        eventFilters:
          - attribute: database
            value: ${DATABASE}
          - attribute: document
            value: typesense_manual_sync/{documentId}
            operator: match-path-pattern

  - name: scheduled_sync
    description: >-
      A scheduled function that automatically syncs all configured collections to Typesense
      at the interval specified by SCHEDULED_SYNC_INTERVAL parameter.
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs22
      sourceDirectory: functions
      serviceConfig:
        timeoutSeconds: 540
        availableMemory: 2048M
        invoker:
          - scheduler-trigger@${PROJECT_ID}.iam.gserviceaccount.com

roles:
  - role: datastore.user
    reason: Required to backfill data from your Firestore collection into Typesense
  - role: run.invoker
    reason: Required for Eventarc to invoke Cloud Run services for event-triggered functions

externalServices:
  - name: Typesense Cloud
    PricingUri: https://cloud.typesense.org/pricing
  - name: Typesense Self Hosted (Free)
    PricingUri: https://typesense.org/downloads

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      For optimal performance, select a location close to your Firestore database region.
    type: select
    options:
      # North America
      - label: us-central1 (Iowa)
        value: us-central1
      - label: us-east1 (South Carolina)
        value: us-east1
      - label: us-east4 (Northern Virginia)
        value: us-east4
      - label: us-east5 (Columbus)
        value: us-east5
      - label: us-south1 (Dallas)
        value: us-south1
      - label: us-west1 (Oregon)
        value: us-west1
      - label: us-west2 (Los Angeles)
        value: us-west2
      - label: us-west3 (Salt Lake City)
        value: us-west3
      - label: us-west4 (Las Vegas)
        value: us-west4
      - label: northamerica-northeast1 (Montreal)
        value: northamerica-northeast1
      - label: northamerica-northeast2 (Toronto)
        value: northamerica-northeast2

      # South America
      - label: southamerica-east1 (Sao Paulo)
        value: southamerica-east1
      - label: southamerica-west1 (Santiago)
        value: southamerica-west1

      # Europe
      - label: europe-north1 (Finland)
        value: europe-north1
      - label: europe-west1 (Belgium)
        value: europe-west1
      - label: europe-west2 (London)
        value: europe-west2
      - label: europe-west3 (Frankfurt)
        value: europe-west3
      - label: europe-west4 (Netherlands)
        value: europe-west4
      - label: europe-west6 (Zurich)
        value: europe-west6
      - label: europe-west8 (Milan)
        value: europe-west8
      - label: europe-west9 (Paris)
        value: europe-west9
      - label: europe-west10 (Berlin)
        value: europe-west10
      - label: europe-west12 (Turin)
        value: europe-west12
      - label: europe-central2 (Warsaw)
        value: europe-central2
      - label: europe-southwest1 (Madrid)
        value: europe-southwest1

      # Middle East
      - label: me-central1 (Doha)
        value: me-central1
      - label: me-central2 (Dammam)
        value: me-central2
      - label: me-west1 (Tel Aviv)
        value: me-west1

      # Asia
      - label: asia-east1 (Taiwan)
        value: asia-east1
      - label: asia-east2 (Hong Kong)
        value: asia-east2
      - label: asia-northeast1 (Tokyo)
        value: asia-northeast1
      - label: asia-northeast2 (Osaka)
        value: asia-northeast2
      - label: asia-northeast3 (Seoul)
        value: asia-northeast3
      - label: asia-south1 (Mumbai)
        value: asia-south1
      - label: asia-south2 (Delhi)
        value: asia-south2
      - label: asia-southeast1 (Singapore)
        value: asia-southeast1
      - label: asia-southeast2 (Jakarta)
        value: asia-southeast2

      # Australia
      - label: australia-southeast1 (Sydney)
        value: australia-southeast1
      - label: australia-southeast2 (Melbourne)
        value: australia-southeast2
    default: us-central1
    required: true
    immutable: false

  - param: FIRESTORE_DATABASE_REGION
    label: Firestore Database region
    description: >-
      The region where your Firestore database is located.
    type: select
    options:
      # Multi-region locations
      - label: nam5 (US multi-region)
        value: nam5
      - label: eur3 (Europe multi-region)
        value: eur3
      # North America
      - label: us-central1 (Iowa)
        value: us-central1
      - label: us-west1 (Oregon)
        value: us-west1
      - label: us-west2 (Los Angeles)
        value: us-west2
      - label: us-west3 (Salt Lake City)
        value: us-west3
      - label: us-west4 (Las Vegas)
        value: us-west4
      - label: us-east1 (South Carolina)
        value: us-east1
      - label: us-east4 (Northern Virginia)
        value: us-east4
      - label: us-east5 (Columbus)
        value: us-east5
      - label: us-south1 (Dallas)
        value: us-south1
      - label: northamerica-northeast1 (Montreal)
        value: northamerica-northeast1
      - label: northamerica-northeast2 (Toronto)
        value: northamerica-northeast2
      - label: northamerica-south1 (Queretaro)
        value: northamerica-south1
      # South America
      - label: southamerica-east1 (São Paulo)
        value: southamerica-east1
      - label: southamerica-west1 (Santiago)
        value: southamerica-west1
      # Europe
      - label: europe-west1 (Belgium)
        value: europe-west1
      - label: europe-west2 (London)
        value: europe-west2
      - label: europe-west3 (Frankfurt)
        value: europe-west3
      - label: europe-west4 (Netherlands)
        value: europe-west4
      - label: europe-west6 (Zürich)
        value: europe-west6
      - label: europe-west8 (Milan)
        value: europe-west8
      - label: europe-west9 (Paris)
        value: europe-west9
      - label: europe-west10 (Berlin)
        value: europe-west10
      - label: europe-west12 (Turin)
        value: europe-west12
      - label: europe-central2 (Warsaw)
        value: europe-central2
      - label: europe-north1 (Finland)
        value: europe-north1
      - label: europe-north2 (Stockholm)
        value: europe-north2
      - label: europe-southwest1 (Madrid)
        value: europe-southwest1
      # Middle East
      - label: me-central1 (Doha)
        value: me-central1
      - label: me-central2 (Dammam)
        value: me-central2
      - label: me-west1 (Tel Aviv)
        value: me-west1
      # Asia
      - label: asia-east1 (Taiwan)
        value: asia-east1
      - label: asia-east2 (Hong Kong)
        value: asia-east2
      - label: asia-northeast1 (Tokyo)
        value: asia-northeast1
      - label: asia-northeast2 (Osaka)
        value: asia-northeast2
      - label: asia-northeast3 (Seoul)
        value: asia-northeast3
      - label: asia-south1 (Mumbai)
        value: asia-south1
      - label: asia-south2 (Delhi)
        value: asia-south2
      - label: asia-southeast1 (Singapore)
        value: asia-southeast1
      - label: asia-southeast2 (Jakarta)
        value: asia-southeast2
      # Australia
      - label: australia-southeast1 (Sydney)
        value: australia-southeast1
      - label: australia-southeast2 (Melbourne)
        value: australia-southeast2
      # Africa
      - label: africa-south1 (Johannesburg)
        value: africa-south1
    default: nam5
    required: true
    immutable: false

  - param: DATABASE
    label: Firestore Database
    description: >-
      The Firestore database to use. Use "(default)" for the default database.
    example: "(default)"
    default: "(default)"
    required: false

  - param: COLLECTIONS_CONFIG
    label: Collections Configuration
    description: >-
      JSON array of collection configurations. Each object must have:
      - firestorePath: The Firestore collection path (supports wildcards like products/*/reviews)
      - typesenseCollection: Target Typesense collection name
      - firestoreFields: (optional) Array of field names to sync, leave empty array for all fields
    example: |
      [
        {
          "firestorePath": "users",
          "typesenseCollection": "users_index",
          "firestoreFields": ["name", "email", "createdAt"]
        },
        {
          "firestorePath": "products/*/reviews",
          "typesenseCollection": "reviews_index",
          "firestoreFields": []
        }
      ]
    validationRegex: '^\[(\s*\{\s*"firestorePath"\s*:\s*"[^"]+"\s*,\s*"typesenseCollection"\s*:\s*"[^"]+"\s*(,\s*"firestoreFields"\s*:\s*\[[^\]]*\])?\s*\}\s*,?\s*)*\]$'
    validationErrorMessage: Must be a valid JSON array with objects containing firestorePath, typesenseCollection, and optionally firestoreFields
    default: '[{"firestorePath": "path/to/collection", "typesenseCollection": "collection_name", "firestoreFields": []}]'
    required: true
  - param: TYPESENSE_HOSTS
    label: Typesense Hosts
    description: >-
      A comma-separated list of Typesense Hosts.
      For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters,
      please be sure to mention all hostnames.
    example: xyz.a1.typesense.net,xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net
    required: true
  - param: TYPESENSE_API_KEY
    label: Typesense API Key
    type: secret
    description: >-
      An Typesense API key with admin permissions.
      Click on "Generate API Key" in cluster dashboard in Typesense Cloud
    example: ""
    required: true
  - param: FLATTEN_NESTED_DOCUMENTS
    label: Flatten Nested Documents
    description: >-
      Should nested documents in Firestore be flattened by this extension before they are indexed in Typesense?
      Set to "Yes" for Typesense versions 0.23.1 and earlier. Set to "No" for Typesense versions 0.24.0 and later.
    type: select
    options:
      - label: No
        value: false
      - label: Yes
        value: true
    default: false
    required: false
  - param: LOG_TYPESENSE_INSERTS
    label: Log Typesense Inserts for Debugging
    description: >-
      Should data inserted into Typesense be logged in Cloud Logging? This can be useful for debugging, but should not be enabled in production.
    type: select
    options:
      - label: No
        value: false
      - label: Yes
        value: true
    default: false
    required: false
  - param: INCLUDE_FIRESTORE_PATH
    label: Include Firestore Document Path
    description: >-
      Should the Firestore document path be included as a '_path' field in Typesense?
      This is useful for debugging and reverse lookups from Typesense to Firestore.
    type: select
    options:
      - label: No
        value: false
      - label: Yes
        value: true
    default: false
    required: false
  - param: SCHEDULED_SYNC_INTERVAL
    label: Scheduled Sync Interval
    description: >-
      Enable automatic scheduled synchronization of all configured collections to Typesense.
      Choose how often the sync should run. Set to "Never" to disable scheduled syncing.
      Note: This will sync ALL configured collections each time it runs.
    type: select
    options:
      - label: Never (disabled)
        value: "never"
      - label: Every 15 minutes
        value: "*/15 * * * *"
      - label: Every 30 minutes
        value: "*/30 * * * *"
      - label: Every hour
        value: "0 * * * *"
      - label: Every 2 hours
        value: "0 */2 * * *"
      - label: Every 6 hours
        value: "0 */6 * * *"
      - label: Every 12 hours
        value: "0 */12 * * *"
      - label: Daily at midnight
        value: "0 0 * * *"
      - label: Daily at 2 AM
        value: "0 2 * * *"
      - label: Weekly on Sunday at 2 AM
        value: "0 2 * * 0"
    default: "never"
    required: false
